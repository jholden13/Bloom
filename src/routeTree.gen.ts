/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrintMeetingsImport } from './routes/print-meetings'
import { Route as MeetingsImport } from './routes/meetings'
import { Route as EditOutreachImport } from './routes/edit-outreach'
import { Route as AddOutreachImport } from './routes/add-outreach'
import { Route as IndexImport } from './routes/index'
import { Route as TripsIndexImport } from './routes/trips.index'
import { Route as TripsNewImport } from './routes/trips.new'
import { Route as TripsTripIdImport } from './routes/trips.$tripId'

// Create/Update Routes

const PrintMeetingsRoute = PrintMeetingsImport.update({
  id: '/print-meetings',
  path: '/print-meetings',
  getParentRoute: () => rootRoute,
} as any)

const MeetingsRoute = MeetingsImport.update({
  id: '/meetings',
  path: '/meetings',
  getParentRoute: () => rootRoute,
} as any)

const EditOutreachRoute = EditOutreachImport.update({
  id: '/edit-outreach',
  path: '/edit-outreach',
  getParentRoute: () => rootRoute,
} as any)

const AddOutreachRoute = AddOutreachImport.update({
  id: '/add-outreach',
  path: '/add-outreach',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TripsIndexRoute = TripsIndexImport.update({
  id: '/trips/',
  path: '/trips/',
  getParentRoute: () => rootRoute,
} as any)

const TripsNewRoute = TripsNewImport.update({
  id: '/trips/new',
  path: '/trips/new',
  getParentRoute: () => rootRoute,
} as any)

const TripsTripIdRoute = TripsTripIdImport.update({
  id: '/trips/$tripId',
  path: '/trips/$tripId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add-outreach': {
      id: '/add-outreach'
      path: '/add-outreach'
      fullPath: '/add-outreach'
      preLoaderRoute: typeof AddOutreachImport
      parentRoute: typeof rootRoute
    }
    '/edit-outreach': {
      id: '/edit-outreach'
      path: '/edit-outreach'
      fullPath: '/edit-outreach'
      preLoaderRoute: typeof EditOutreachImport
      parentRoute: typeof rootRoute
    }
    '/meetings': {
      id: '/meetings'
      path: '/meetings'
      fullPath: '/meetings'
      preLoaderRoute: typeof MeetingsImport
      parentRoute: typeof rootRoute
    }
    '/print-meetings': {
      id: '/print-meetings'
      path: '/print-meetings'
      fullPath: '/print-meetings'
      preLoaderRoute: typeof PrintMeetingsImport
      parentRoute: typeof rootRoute
    }
    '/trips/$tripId': {
      id: '/trips/$tripId'
      path: '/trips/$tripId'
      fullPath: '/trips/$tripId'
      preLoaderRoute: typeof TripsTripIdImport
      parentRoute: typeof rootRoute
    }
    '/trips/new': {
      id: '/trips/new'
      path: '/trips/new'
      fullPath: '/trips/new'
      preLoaderRoute: typeof TripsNewImport
      parentRoute: typeof rootRoute
    }
    '/trips/': {
      id: '/trips/'
      path: '/trips'
      fullPath: '/trips'
      preLoaderRoute: typeof TripsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-outreach': typeof AddOutreachRoute
  '/edit-outreach': typeof EditOutreachRoute
  '/meetings': typeof MeetingsRoute
  '/print-meetings': typeof PrintMeetingsRoute
  '/trips/$tripId': typeof TripsTripIdRoute
  '/trips/new': typeof TripsNewRoute
  '/trips': typeof TripsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-outreach': typeof AddOutreachRoute
  '/edit-outreach': typeof EditOutreachRoute
  '/meetings': typeof MeetingsRoute
  '/print-meetings': typeof PrintMeetingsRoute
  '/trips/$tripId': typeof TripsTripIdRoute
  '/trips/new': typeof TripsNewRoute
  '/trips': typeof TripsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add-outreach': typeof AddOutreachRoute
  '/edit-outreach': typeof EditOutreachRoute
  '/meetings': typeof MeetingsRoute
  '/print-meetings': typeof PrintMeetingsRoute
  '/trips/$tripId': typeof TripsTripIdRoute
  '/trips/new': typeof TripsNewRoute
  '/trips/': typeof TripsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add-outreach'
    | '/edit-outreach'
    | '/meetings'
    | '/print-meetings'
    | '/trips/$tripId'
    | '/trips/new'
    | '/trips'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add-outreach'
    | '/edit-outreach'
    | '/meetings'
    | '/print-meetings'
    | '/trips/$tripId'
    | '/trips/new'
    | '/trips'
  id:
    | '__root__'
    | '/'
    | '/add-outreach'
    | '/edit-outreach'
    | '/meetings'
    | '/print-meetings'
    | '/trips/$tripId'
    | '/trips/new'
    | '/trips/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddOutreachRoute: typeof AddOutreachRoute
  EditOutreachRoute: typeof EditOutreachRoute
  MeetingsRoute: typeof MeetingsRoute
  PrintMeetingsRoute: typeof PrintMeetingsRoute
  TripsTripIdRoute: typeof TripsTripIdRoute
  TripsNewRoute: typeof TripsNewRoute
  TripsIndexRoute: typeof TripsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddOutreachRoute: AddOutreachRoute,
  EditOutreachRoute: EditOutreachRoute,
  MeetingsRoute: MeetingsRoute,
  PrintMeetingsRoute: PrintMeetingsRoute,
  TripsTripIdRoute: TripsTripIdRoute,
  TripsNewRoute: TripsNewRoute,
  TripsIndexRoute: TripsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add-outreach",
        "/edit-outreach",
        "/meetings",
        "/print-meetings",
        "/trips/$tripId",
        "/trips/new",
        "/trips/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/add-outreach": {
      "filePath": "add-outreach.tsx"
    },
    "/edit-outreach": {
      "filePath": "edit-outreach.tsx"
    },
    "/meetings": {
      "filePath": "meetings.tsx"
    },
    "/print-meetings": {
      "filePath": "print-meetings.tsx"
    },
    "/trips/$tripId": {
      "filePath": "trips.$tripId.tsx"
    },
    "/trips/new": {
      "filePath": "trips.new.tsx"
    },
    "/trips/": {
      "filePath": "trips.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
